{"version":3,"sources":["RecaptchaOverlay.js","Chat.js","App.js","index.js"],"names":["RecaptchaOverlay","socket","props","className","style","enabled","opacity","sitekey","onChange","captchaUpdate","onClick","Chat","handleChange","e","setState","messageValue","target","value","sendMessage","preventDefault","emit","message","state","prevState","messages","concat","socketIOClient","on","data","disconnect","id","this","map","index","onSubmit","type","name","React","Component","App","overlayOff","overlay","content","overlayEnabled","ms","Promise","resolve","setTimeout","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAsBeA,ICnBXC,EDmBWD,EAnBf,SAA0BE,GACzB,OACC,qBACCC,UAAU,cACVC,MAAOF,EAAMG,QAAU,CAAEC,QAAS,KAAQ,CAAEA,QAAS,GAFtD,SAIC,sBAAKH,UAAU,gBAAf,UACC,oBAAIA,UAAU,kBAAd,kCACA,qFACA,cAAC,IAAD,CACCI,QAAQ,2CACRC,SAAUN,EAAMO,gBAEjB,wBAAQC,QAASR,EAAMO,cAAvB,yB,iBC4DWE,E,kDArEd,WAAYT,GAAQ,IAAD,8BAClB,cAAMA,IAwBPU,aAAe,SAACC,GACf,EAAKC,SAAS,CAAEC,aAAcF,EAAEG,OAAOC,SA1BrB,EA6BnBC,YAAc,SAACL,GACdA,EAAEM,iBACFlB,EAAOmB,KAAK,oBAAqB,CAChCC,QAAS,EAAKC,MAAMP,eAErB,EAAKD,UAAS,SAACS,GAEd,MAAO,CACNC,SAFgBD,EAAUC,SAASC,OAAO,EAAKH,MAAMP,cAGrDA,aAAc,QApChB,EAAKO,MAAQ,CACZE,SAAU,GACVT,aAAc,IAJG,E,qDAQnB,WAAqB,IAAD,QACnBd,EAASyB,IAZM,+CAcRC,GAAG,gBAAgB,SAACC,GAC1B,EAAKd,UAAS,SAACS,GAEd,MAAO,CACNC,SAFgBD,EAAUC,SAASC,OAAOG,EAAKP,kB,kCAQnD,WACCpB,EAAO4B,e,oBAqBR,WACC,OACC,gCACC,yDACA,qBAAKC,GAAG,WAAR,SACEC,KAAKT,MAAME,SAASQ,KAAI,SAACf,EAAOgB,GAChC,OAAO,4BAAgBhB,GAARgB,QAGjB,sBAAMC,SAAUH,KAAKb,YAArB,SACC,6CAEC,uBACCiB,KAAK,OACLC,KAAK,aACL5B,SAAUuB,KAAKnB,aACfK,MAAOc,KAAKT,MAAMP,eAEnB,uBAAOoB,KAAK,SAASlB,MAAM,qB,GA9DdoB,IAAMC,W,IC2DVC,E,kDAvDd,WAAYrC,GAAQ,IAAD,8BAClB,cAAMA,IA6BPO,cAAgB,SAACQ,GAGhB,EAAKuB,cA/BL,EAAKlB,MAAQ,CACZmB,QAAS,CACRA,SAAS,EACTC,SAAS,EACTC,gBAAgB,IANA,E,8CAWnB,WAAc,IAhBAC,EAgBD,OACZb,KAAKjB,SAAS,CACb2B,QAAS,CACRA,SAAS,EACTC,SAAS,EACTC,gBAAgB,MArBLC,EAyBP,IAxBA,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAwBvCI,MAAK,WAChB,EAAKlC,SAAS,CACb2B,QAAS,CACRA,SAAS,EACTC,SAAS,U,oBAYb,WACC,OACC,gCACEX,KAAKT,MAAMmB,QAAQA,SACnB,cAAC,EAAD,CACCpC,QAAS0B,KAAKT,MAAMmB,QAAQE,eAC5BlC,cAAesB,KAAKtB,gBAGrBsB,KAAKT,MAAMmB,QAAQC,SACnB,qBAAKvC,UAAU,UAAf,SACC,cAAC,EAAD,a,GAhDYkC,IAAMC,WCLxBW,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.3249bf1f.chunk.js","sourcesContent":["import React from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nfunction RecaptchaOverlay(props) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"fill-screen\"\n\t\t\tstyle={props.enabled ? { opacity: 100 } : { opacity: 0 }}\n\t\t>\n\t\t\t<div className=\"container-box\">\n\t\t\t\t<h1 className=\"welcome-message\">Welcome to Chat App!</h1>\n\t\t\t\t<p>Please check this captcha to gain access to the site</p>\n\t\t\t\t<ReCAPTCHA\n\t\t\t\t\tsitekey=\"6LcAHXkaAAAAAGZ9FezjX8KLWSBiD5-fZHPqqQJe\"\n\t\t\t\t\tonChange={props.captchaUpdate}\n\t\t\t\t/>\n\t\t\t\t<button onClick={props.captchaUpdate}>Press</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RecaptchaOverlay;\n","import React from 'react';\nimport socketIOClient from 'socket.io-client';\n\nlet socket;\nconst ENDPOINT = 'https://react-recaptcha-123.herokuapp.com/';\n\nclass Chat extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [],\n\t\t\tmessageValue: '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tsocket = socketIOClient(ENDPOINT);\n\n\t\tsocket.on('chat-message', (data) => {\n\t\t\tthis.setState((prevState) => {\n\t\t\t\tconst messages = prevState.messages.concat(data.message);\n\t\t\t\treturn {\n\t\t\t\t\tmessages,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tsocket.disconnect();\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ messageValue: e.target.value });\n\t};\n\n\tsendMessage = (e) => {\n\t\te.preventDefault();\n\t\tsocket.emit('send-chat-message', {\n\t\t\tmessage: this.state.messageValue,\n\t\t});\n\t\tthis.setState((prevState) => {\n\t\t\tconst messages = prevState.messages.concat(this.state.messageValue);\n\t\t\treturn {\n\t\t\t\tmessages,\n\t\t\t\tmessageValue: '',\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>This is the chat window!</p>\n\t\t\t\t<div id=\"messages\">\n\t\t\t\t\t{this.state.messages.map((value, index) => {\n\t\t\t\t\t\treturn <p key={index}>{value}</p>;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={this.sendMessage}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tMessage:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"messageBox\"\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tvalue={this.state.messageValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Send\" />\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Chat;\n","import './App.css';\nimport React from 'react';\nimport RecaptchaOverlay from './RecaptchaOverlay';\nimport Chat from './Chat';\n\nfunction sleep(ms) {\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\toverlay: {\n\t\t\t\toverlay: true,\n\t\t\t\tcontent: false,\n\t\t\t\toverlayEnabled: true,\n\t\t\t},\n\t\t};\n\t}\n\n\toverlayOff() {\n\t\tthis.setState({\n\t\t\toverlay: {\n\t\t\t\toverlay: true,\n\t\t\t\tcontent: true,\n\t\t\t\toverlayEnabled: false,\n\t\t\t},\n\t\t});\n\t\t// Wait for animation\n\t\tsleep(1000).then(() => {\n\t\t\tthis.setState({\n\t\t\t\toverlay: {\n\t\t\t\t\toverlay: false,\n\t\t\t\t\tcontent: true,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tcaptchaUpdate = (value) => {\n\t\t// Send captcha to be verified\n\t\t// If verified, hide fill-screen\n\t\tthis.overlayOff();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.overlay.overlay && (\n\t\t\t\t\t<RecaptchaOverlay\n\t\t\t\t\t\tenabled={this.state.overlay.overlayEnabled}\n\t\t\t\t\t\tcaptchaUpdate={this.captchaUpdate}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.state.overlay.content && (\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<Chat />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}